CloudFront - Overview
-Content Delivery Network (CDN)
-Improves read performance, content
 is cached at the edge

-216 Points of Presence globally (edge locations)

-DDoS protection, integration with Shield,
 AWS Web Application Firewall

-Can expose external HTTPS and can talk to
 internal HTTPS backends


CloudFront - Origins

-S3 bucket
 -For distributing files and caching them at the edge
 -Enchanced security with CloudFront Origin Access Identity(OAI)
 -CloudFront can used as an ingress (to upload files to S3)


-Custom Origin (HTTP)
 -Application Load Balancer
 -EC2 instance
 -S3 website
 (must first enable the bucket as a static S3 website)
 -Any HTTP backend you want



CloudFront at a high level
Client will send a http-request.
Edge Location will forward onto the origin.
Edge Location will cache the request.



CloudFront - S3 as an Origin
Edge will fetch the buckets.
OAI.


CloudFront - ALB or EC2 as an origin

CloudFront Geo Restriction

-You can restrict who can access your distribution
 -Whitelist: Allow your users to access your content only
  if they're in one of the countries on a list of approved
  countries.

 -Blacklist: Prevent your users from accessing your content
  if they're in one of the countries on a blacklist of banned
  countries


-The "country" is determined using 3rd party Geo-IP database
-Use case: Copyright Laws to control access to content



CloudFront vs S3 Cross Region Replication
CloudFront:
 - Gobal Edge Network
 - Files are cached for a TTL (maybe a day)
 - Great for static content that must be abailable everywhere

S3 Cross Region Replication:
 -Must be setup for each region you want replication to happen
 -Files are updated in near real-time
 -Read only
 -Great for dynamic content that needs to be available at
  low-latency in few regions





CloudFront Hands On
-We'll create an S3 bucket
-We'll create a CloudFront distribution
-We'll create an Origin Access Identity
-We'll limit the S3 bucket to be accessed only using this
 identity


Create a bucket.
Create a distribution.
Create a new indentity

We have an origin access key.
Ip cross-origin access.



CloudFront Caching & Caching Invalidations - Hands On
-Cache based on
 -Headers
 -Session Coockies
 -Query String Parameters

-The cache lives at each CloudFront Edge Location

-You want to maximize the cache hit rate to minimize
 requests on the origin

-Control the TTL (0 seconds to 1 year), can
 be set by the origin, using the Cache-Control header,
 Expires header...

-You can invalidate part of the cache using the
 CreateInvalidation API


CloudFront - Maximize cache hits by separating static and 
             dynamix distributions


If it is dynamic we want to be more careful besides when it
is cached as Static requests.

If it is static it is going to a S3 bucket.
When it is Dynamic it is going to a http server.
ALB + EC2




CloudFront Security

CloudFront Geo Restriction
-You can restrict who can access your distribution
 -Whitelist: Allow your users to access your content only
  if they're in on a list of approved countries

 -Blacklist: Prevent your users from accessing your content
  if they're in one of the countries on a blacklist of banned
  countries.



-The "country" is determined using a 3rd party Geo-IP database
-Use case: Copyright Laws to control access to content


CloudFront and HTTPS

-Viewer Protocol Policy:
 -Redirect HTTP to HTTPS
 -Or use HTTPS only

-Origin Protocol Policy (HTTP or S3)
 -HTTPS only
 -Or Match Viewer
 (HTTP => HTTP & HTTPS => HTTPS)



-Note:
 -S3 bucket "website" don't support HTTPS



CloudFront Signed Url / Cookies
-You want to distribute paid shared content to premium
 users over the world

-We can use CloudFront Signed URL / Cookie. 
 We attach a policy with:
  -Includes URL expiration
  -Includes IP ranges to access the data from
  -Trusted signers (which AWS accounts can create signed URLs)

-How long should the URL be valid for?
 -Shared content (movie, music): make it short (a few minutes)
 -Private content (private to the user): you can make it last
  for years


-Signed URL = access to individual files 
 (one signed URL per file)

-Signed Cookies = access to multiple files 
                  (one signed cookie for many files)



CloudFront Signed URL Diagram
OAI for Amazon S3 bucket.
Use AWS SDK with and generate Signed URL.



CloudFront Signed URL vs S3 Pre-Signed URL

CloudFront Signed URL:
 - Allow access to a path, no matter the origin
 - Account wide key-pair, only the root can manage it
 - Can filter by IP, path, date, expiration
 - Can leverage caching features

S3 Pre-Signed URL:
 - Issue a request as the person who pre-signed the URL
 - Uses the IAM key of the signing IAM prinicipal
 - Limited lifetime 



Quiz 11: CloudFront Quiz


Question 1:
Which features allows us to distribute paid content from S3 securely, globally, if the S3 bucket is secured to only exchange data with CloudFront?

Answer: 
  CloudFront Signed URL

  CloudFront Signed URL are commonly used to distribute paid content through dynamic CloudFront Signed URL generation.





Question 2:
You are hosting highly dynamic content in Amazon S3 in us-east-1. Recently, there has been a need to make that data available with low latency in Singapore. What do you recommend using?

Answer:

 S3 Cross Region Replication

 S3 CRR allows you to replicate the data from one bucket in a region to another bucket in another region


Question 3:
How can you ensure that only users who access our website through Canada are authorized in CloudFront?


Answer:
Use CloudFront Geo Restriction


Question 4:
CloudFront is deploying in front of an HTTP origin. After updating your HTTP app, the users still see the old website. What should you do?

Answer:
   Invalidate the distribution
   
