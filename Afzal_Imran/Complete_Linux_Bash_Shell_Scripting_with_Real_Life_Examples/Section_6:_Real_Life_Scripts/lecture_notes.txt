Welcome to Real Life Scripting
-Scripts that relate to real life enviroment


Accessing data from a file
-Create a first script that will pull errors from a file
-Create second script that will format the output of 
 administrative commands

mkdir professional-scripts

ls -ltr

cp /var/log/messages /home/iafzal/professional-scripts

chmod messages iafzal
chown iafzal messages

vi pull-data

#! /bin/bash
# Author: Imran Afzal
# Date: 08/08/2020
# Descrption: This script will pull only Error messages from 
  /var/log/messages

# Modified: 08/08/2020

grep -i error /home/iafzal/professional-scripts/messages

Only getting the error messages.
Trouble shooting in the log-files.

pull-warn scripts

#! /bin/bash
# Author: Imran Afzal
# Date: 08/08/2020
# Descrption: This script will pull only Error messages from 
  /var/log/messages

# Modified: 08/08/2020

grep -i warn /home/iafzal/professional-scripts/messages

pull-fail script

#! /bin/bash
# Author: Imran Afzal
# Date: 08/08/2020
# Descrption: This script will pull only Error messages from 
  /var/log/messages

# Modified: 08/08/2020

grep -i fail /home/iafzal/professional-scripts/messages

#! /bin/bash
#Author: Imran Afzal
#Date: 08/08/2020
#Descrption: Format the output of admin commands
#Modified:  08/08/2020

date | awk '{print $1}'
uptime | awk {print $3}
df -h | grep root




Check Remote Servers Connectivity
Monitor the health check.
You need to ping other remote servers.

-A script to check the status of remote hosts

ping script

#! /bin/bash
# Author: Imran Afzal
# Date: 08/08/2020
# Descrption: This script will ping a remote host and notify

ping -c1 192.168.1.1
        if [ $? -eq 0 ]
        then
        echo OK
        else
        echo NOT OK
        fi


Change the IP to 192.168.1.235


Don't show the output
ping -c1 192.168.1.1 &> /dev/null
        if [ $? -eq 0 ]
        then
        echo OK
        else
        echo NOT OK
        fi

This will return that this is not ok.

If you don't want to output that on the screen.

Define variable
#!/bin/bash

hosts="192.168.1.1"
ping -c1 $hosts &> /dev/null
        if [ $? -eq 0 ]
        then
        echo $hosts OK
        else
        echo $hosts NOT OK
        fi

Sometimes you don't want to see all that junk on the screen.
And ping that in a variable and just specify it just one time.

Multiple IPs
#!/bin/bash

IPLIST="path_to_the_Ip_list_file"


for ip in $(cat $IPLIST)

do
   ping -c1 $ip &> /dev/null
   if [ $? -eq 0 ]
   then
   echo $ip ping passed
   else
   echo $ip ping failed
   fi
done

If you want to ping multiple address.





Script Scheduling and Notification


Script to Delete Old Files

Backup Filesystem

For loops Scripts for File System - 1

For loops Scripts for File System - 2

Copy Files to Remote Hosts

User Directory Assignment

List of Users Logged in by Date

Script for Central Logging(rsylog)

Script for User Account Management

Disable Inactive Users

Check Process Status and Killing it

Disk Space Status

Status on Total Number of Files

Create System Inventory

Scripts with Pre-defined Information

Getting Online Help

Congratulations

Homework