VPC Fundamentals - Section Introduction
-VPC is something you should know in depth for the AWS Certified Solutions
 Architect Associate  & AWS Certified SysOps Adminstrator

-At the AWS Certified Developer Level, you should know about:
 -VPC, Subnets, Internet Gateways & NAT Gateways
 -Security Groups, Network ACL (NACL), VPC Flow Logs
 -VPC Peering, VPC Endpoints
 -Site to Site VPN & Direct Connect

-I will just give you an overview, less than 1 or 2 questions at your exam


VPC , Subnets , IGW, and NAT


-VPC: private network to deploy your resources (regional resource)
-Subnets allow you to partition your network inside your VPC
 (Availability Zone resource)
-A public subnet is a subnet that is accessible from the internet
-A private subnet is a subnet that is not accessible from the internet
-To define access to the internet and between subnets, we use
 Route Tables

VPC Diagram
VPC CIDR Range:

Internet Gateway & NAT Gateways
-Internet Gateways helps our VPC instances connect with the internet
-Public Subnets have a route to the internet gateway

-NAT Gateways (AWS-managed) & NAT Instances (self-managed)
 allow your instances in your Private Subnets to access the internet while remaining private



NACL, SG, VPC Flow Logs
Network ACL & Security Groups
-NACL (Network ACL)
 -A firewall which controls traffic and to subnet
 -Can have ALLOW and DENY rules
 -Are attached at the Subnet level
 -Rules only include IP addresses

Security Groups
 -A firewall that controls traffic to and from an ENI / an EC2 instance
 -Can have only ALLOW rules
 -Rules include IP addresses and other security groups 

Security groups are attached to an instance and the Network ACL are attached to an subnet level.

VPC Flow Logs
-Capture information about the IP traffic going into youe interfaces:
 -VPC Flow Logs
 -Subnet Flow Logs
 -Elastic Network Interface Flow Logs

Helps to monitor & troubleshoot conncectivity issuses Example:
 -Subnets to internet
 -Subnets to subnets
 -Internet to subnets


VPC Peering, Endpoints, VPN, DX
VPN Peering 
-Connect two VPC, privately using AWS' network
-Make the behave as if they were in the same network
-Must not have overlapping CIDR (IP address range)
-VPC Peering connection is not transitive
 (must be established for each VPC that need to communicate with one 
  another)

VPC Endpoints

-Endpoints allow you to connect to AWS
 Services using a private network instead of the public www network

-This gives you enchanced security and lower latency to access AWS 
 services

-VPC Endpoint Gateway: S3 & DynamoDB

-VPC Endpoint Interface: the rest

-Only used within your VPC


VPC Cheat Sheet & Closing Comments
Just remeber a few concepts.
-VPC: Virtual Private Cloud
-Subnets: Tied to an AZ, network partition of the VPC
-Internet Gateway: at the VPC level, provide Internet Access
-NAT Gateway / Instances: give internet access to private subnets
-NACL: Statless, subnet rules for inbound and outbound
-Security Groups: Stateful, operate at the EC2 instance level or ENI
-VPC Peering: Connect two VPC with non overlapping IP ranges,
 non transistive
-VPC Endpoints: Provide private access to AWS Services within VPC
-VPC Flow Logs: network traffic Logs
-Site to Site VPN: VPN over public internet between on-premises DC and 
 AWS
-Direct Connect: direct private connection to a AWS


Three Tier Architecture
So our users want to access our appliction.
We have an ELB.
We have to do a DNS query.

LAMP Stack on EC2
-Linux: OS for EC2 instances
-Apache: Web Server that run on Linux (EC2)
-MySQL: database on RDS
-PHP: Application logic (running on EC2)

-Can add Redis / Memcached (ElasticCache) to include a caching tech
-To store local appliction data & software: EBS drive (root)



Quiz 7: VPC Quiz

Question 1:
You have set up an internet gateway in your VPC, but your EC2 instances still don't have access to the internet.

Which of the following is **NOT** a possible issue?

Answer:
  The security group does not allow network in

  security groups are stateful and if traffic can go out, then it can go back in


Question 2:

You would like to provide internet access to your instances in private subnets with IPv4, while making sure this solution requires the least amount of administration and scales seamlessly. What should you use?

Answer:
     NAT Gateway

Question 3:
Your EC2 instance in a private subnet must access the AWS APIs privately. You must keep all traffic within the AWS network. What do you recommend?

Answer: 
    VPC Endpoints


